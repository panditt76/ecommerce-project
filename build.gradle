plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.salman'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'at.favre.lib:bcrypt:0.10.2'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	implementation("org.modelmapper:modelmapper:3.2.2")

	implementation("io.jsonwebtoken:jjwt-api:0.12.6")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.12.6")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.12.6")

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5")
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.register("bootRunDev", org.springframework.boot.gradle.tasks.run.BootRun) {
	group = "application"
	description = "Run the application with the 'dev' profile"
	args = ["--spring.profiles.active=dev"]
	classpath = sourceSets.main.runtimeClasspath
	mainClass.set("com.salman.YourMainClass") // change this to your actual main class
}

tasks.register("bootRunProd", org.springframework.boot.gradle.tasks.run.BootRun) {
	group = "application"
	description = "Run the application with the 'prod' profile"
	args = ["--spring.profiles.active=prod"]
	classpath = sourceSets.main.runtimeClasspath
	mainClass.set("com.salman.YourMainClass") // change this too
}